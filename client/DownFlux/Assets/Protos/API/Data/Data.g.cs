// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api/data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DF.Game.API.Data {

  /// <summary>Holder for reflection information generated from api/data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for api/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5hcGkvZGF0YS5wcm90bxINZ2FtZS5hcGkuZGF0YRoTYXBpL2NvbnN0YW50",
            "cy5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29n",
            "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIh0KCENsaWVudElEEhEKCWNs",
            "aWVudF9pZBgBIAEoCSIgCghQb3NpdGlvbhIJCgF4GAEgASgBEgkKAXkYAiAB",
            "KAEiIgoKQ29vcmRpbmF0ZRIJCgF4GAEgASgFEgkKAXkYAiABKAUimwEKCkN1",
            "cnZlRGF0dW0SDAoEdGljaxgBIAEoARIUCgpib29sX2RhdHVtGAIgASgISAAS",
            "FQoLaW50MzJfZGF0dW0YAyABKAVIABIWCgxkb3VibGVfZGF0dW0YBCABKAFI",
            "ABIxCg5wb3NpdGlvbl9kYXR1bRgFIAEoCzIXLmdhbWUuYXBpLmRhdGEuUG9z",
            "aXRpb25IAEIHCgVkYXR1bSK0AQoFQ3VydmUSEQoJZW50aXR5X2lkGAEgASgJ",
            "EjQKCHByb3BlcnR5GAIgASgOMiIuZ2FtZS5hcGkuY29uc3RhbnRzLkVudGl0",
            "eVByb3BlcnR5EisKBHR5cGUYAyABKA4yHS5nYW1lLmFwaS5jb25zdGFudHMu",
            "Q3VydmVUeXBlEicKBGRhdGEYBCADKAsyGS5nYW1lLmFwaS5kYXRhLkN1cnZl",
            "RGF0dW0SDAoEdGljaxgFIAEoASKSAQoMU2VydmVyU3RhdHVzEhIKCmlzX3N0",
            "YXJ0ZWQYASABKAgSDAoEdGljaxgCIAEoARIwCg10aWNrX2R1cmF0aW9uGAMg",
            "ASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEi4KCnN0YXJ0X3RpbWUY",
            "BCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIkkKBkVudGl0eRIR",
            "CgllbnRpdHlfaWQYASABKAkSLAoEdHlwZRgCIAEoDjIeLmdhbWUuYXBpLmNv",
            "bnN0YW50cy5FbnRpdHlUeXBlIloKCUdhbWVTdGF0ZRIkCgZjdXJ2ZXMYASAD",
            "KAsyFC5nYW1lLmFwaS5kYXRhLkN1cnZlEicKCGVudGl0aWVzGAIgAygLMhUu",
            "Z2FtZS5hcGkuZGF0YS5FbnRpdHlCIloNZ2FtZS5hcGkuZGF0YaoCEERGLkdh",
            "bWUuQVBJLkRhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DF.Game.API.Constants.ConstantsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DF.Game.API.Data.ClientID), global::DF.Game.API.Data.ClientID.Parser, new[]{ "ClientId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DF.Game.API.Data.Position), global::DF.Game.API.Data.Position.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DF.Game.API.Data.Coordinate), global::DF.Game.API.Data.Coordinate.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DF.Game.API.Data.CurveDatum), global::DF.Game.API.Data.CurveDatum.Parser, new[]{ "Tick", "BoolDatum", "Int32Datum", "DoubleDatum", "PositionDatum" }, new[]{ "Datum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DF.Game.API.Data.Curve), global::DF.Game.API.Data.Curve.Parser, new[]{ "EntityId", "Property", "Type", "Data", "Tick" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DF.Game.API.Data.ServerStatus), global::DF.Game.API.Data.ServerStatus.Parser, new[]{ "IsStarted", "Tick", "TickDuration", "StartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DF.Game.API.Data.Entity), global::DF.Game.API.Data.Entity.Parser, new[]{ "EntityId", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DF.Game.API.Data.GameState), global::DF.Game.API.Data.GameState.Parser, new[]{ "Curves", "Entities" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// ClientID contains identification information about a specific client
  /// connected to the game. This struct is surfaced as public information and does
  /// not contain any authentication-related tokens.
  /// </summary>
  public sealed partial class ClientID : pb::IMessage<ClientID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientID> _parser = new pb::MessageParser<ClientID>(() => new ClientID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DF.Game.API.Data.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientID(ClientID other) : this() {
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientID Clone() {
      return new ClientID(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientID other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Position is a specific point in the map, representing a point in the map.
  /// </summary>
  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DF.Game.API.Data.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Coordinate is a pointer to a specific Tile object in a map.
  /// TODO(minkezhang): Move to //map/api.
  /// </summary>
  public sealed partial class Coordinate : pb::IMessage<Coordinate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Coordinate> _parser = new pb::MessageParser<Coordinate>(() => new Coordinate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Coordinate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DF.Game.API.Data.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate(Coordinate other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate Clone() {
      return new Coordinate(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Coordinate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Coordinate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Coordinate other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CurveDatum represents a single (time, data) point on a curve. The value of
  /// the datum may be of multiple types, and it is up to the client and server
  /// to consume this data responsibly.
  /// </summary>
  public sealed partial class CurveDatum : pb::IMessage<CurveDatum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurveDatum> _parser = new pb::MessageParser<CurveDatum>(() => new CurveDatum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurveDatum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DF.Game.API.Data.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurveDatum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurveDatum(CurveDatum other) : this() {
      tick_ = other.tick_;
      switch (other.DatumCase) {
        case DatumOneofCase.BoolDatum:
          BoolDatum = other.BoolDatum;
          break;
        case DatumOneofCase.Int32Datum:
          Int32Datum = other.Int32Datum;
          break;
        case DatumOneofCase.DoubleDatum:
          DoubleDatum = other.DoubleDatum;
          break;
        case DatumOneofCase.PositionDatum:
          PositionDatum = other.PositionDatum.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurveDatum Clone() {
      return new CurveDatum(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private double tick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Tick {
      get { return tick_; }
      set {
        tick_ = value;
      }
    }

    /// <summary>Field number for the "bool_datum" field.</summary>
    public const int BoolDatumFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolDatum {
      get { return datumCase_ == DatumOneofCase.BoolDatum ? (bool) datum_ : false; }
      set {
        datum_ = value;
        datumCase_ = DatumOneofCase.BoolDatum;
      }
    }

    /// <summary>Field number for the "int32_datum" field.</summary>
    public const int Int32DatumFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int32Datum {
      get { return datumCase_ == DatumOneofCase.Int32Datum ? (int) datum_ : 0; }
      set {
        datum_ = value;
        datumCase_ = DatumOneofCase.Int32Datum;
      }
    }

    /// <summary>Field number for the "double_datum" field.</summary>
    public const int DoubleDatumFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleDatum {
      get { return datumCase_ == DatumOneofCase.DoubleDatum ? (double) datum_ : 0D; }
      set {
        datum_ = value;
        datumCase_ = DatumOneofCase.DoubleDatum;
      }
    }

    /// <summary>Field number for the "position_datum" field.</summary>
    public const int PositionDatumFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DF.Game.API.Data.Position PositionDatum {
      get { return datumCase_ == DatumOneofCase.PositionDatum ? (global::DF.Game.API.Data.Position) datum_ : null; }
      set {
        datum_ = value;
        datumCase_ = value == null ? DatumOneofCase.None : DatumOneofCase.PositionDatum;
      }
    }

    private object datum_;
    /// <summary>Enum of possible cases for the "datum" oneof.</summary>
    public enum DatumOneofCase {
      None = 0,
      BoolDatum = 2,
      Int32Datum = 3,
      DoubleDatum = 4,
      PositionDatum = 5,
    }
    private DatumOneofCase datumCase_ = DatumOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatumOneofCase DatumCase {
      get { return datumCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatum() {
      datumCase_ = DatumOneofCase.None;
      datum_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurveDatum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurveDatum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Tick, other.Tick)) return false;
      if (BoolDatum != other.BoolDatum) return false;
      if (Int32Datum != other.Int32Datum) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleDatum, other.DoubleDatum)) return false;
      if (!object.Equals(PositionDatum, other.PositionDatum)) return false;
      if (DatumCase != other.DatumCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Tick);
      if (datumCase_ == DatumOneofCase.BoolDatum) hash ^= BoolDatum.GetHashCode();
      if (datumCase_ == DatumOneofCase.Int32Datum) hash ^= Int32Datum.GetHashCode();
      if (datumCase_ == DatumOneofCase.DoubleDatum) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleDatum);
      if (datumCase_ == DatumOneofCase.PositionDatum) hash ^= PositionDatum.GetHashCode();
      hash ^= (int) datumCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Tick != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Tick);
      }
      if (datumCase_ == DatumOneofCase.BoolDatum) {
        output.WriteRawTag(16);
        output.WriteBool(BoolDatum);
      }
      if (datumCase_ == DatumOneofCase.Int32Datum) {
        output.WriteRawTag(24);
        output.WriteInt32(Int32Datum);
      }
      if (datumCase_ == DatumOneofCase.DoubleDatum) {
        output.WriteRawTag(33);
        output.WriteDouble(DoubleDatum);
      }
      if (datumCase_ == DatumOneofCase.PositionDatum) {
        output.WriteRawTag(42);
        output.WriteMessage(PositionDatum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Tick != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Tick);
      }
      if (datumCase_ == DatumOneofCase.BoolDatum) {
        output.WriteRawTag(16);
        output.WriteBool(BoolDatum);
      }
      if (datumCase_ == DatumOneofCase.Int32Datum) {
        output.WriteRawTag(24);
        output.WriteInt32(Int32Datum);
      }
      if (datumCase_ == DatumOneofCase.DoubleDatum) {
        output.WriteRawTag(33);
        output.WriteDouble(DoubleDatum);
      }
      if (datumCase_ == DatumOneofCase.PositionDatum) {
        output.WriteRawTag(42);
        output.WriteMessage(PositionDatum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick != 0D) {
        size += 1 + 8;
      }
      if (datumCase_ == DatumOneofCase.BoolDatum) {
        size += 1 + 1;
      }
      if (datumCase_ == DatumOneofCase.Int32Datum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Int32Datum);
      }
      if (datumCase_ == DatumOneofCase.DoubleDatum) {
        size += 1 + 8;
      }
      if (datumCase_ == DatumOneofCase.PositionDatum) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionDatum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurveDatum other) {
      if (other == null) {
        return;
      }
      if (other.Tick != 0D) {
        Tick = other.Tick;
      }
      switch (other.DatumCase) {
        case DatumOneofCase.BoolDatum:
          BoolDatum = other.BoolDatum;
          break;
        case DatumOneofCase.Int32Datum:
          Int32Datum = other.Int32Datum;
          break;
        case DatumOneofCase.DoubleDatum:
          DoubleDatum = other.DoubleDatum;
          break;
        case DatumOneofCase.PositionDatum:
          if (PositionDatum == null) {
            PositionDatum = new global::DF.Game.API.Data.Position();
          }
          PositionDatum.MergeFrom(other.PositionDatum);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Tick = input.ReadDouble();
            break;
          }
          case 16: {
            BoolDatum = input.ReadBool();
            break;
          }
          case 24: {
            Int32Datum = input.ReadInt32();
            break;
          }
          case 33: {
            DoubleDatum = input.ReadDouble();
            break;
          }
          case 42: {
            global::DF.Game.API.Data.Position subBuilder = new global::DF.Game.API.Data.Position();
            if (datumCase_ == DatumOneofCase.PositionDatum) {
              subBuilder.MergeFrom(PositionDatum);
            }
            input.ReadMessage(subBuilder);
            PositionDatum = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Tick = input.ReadDouble();
            break;
          }
          case 16: {
            BoolDatum = input.ReadBool();
            break;
          }
          case 24: {
            Int32Datum = input.ReadInt32();
            break;
          }
          case 33: {
            DoubleDatum = input.ReadDouble();
            break;
          }
          case 42: {
            global::DF.Game.API.Data.Position subBuilder = new global::DF.Game.API.Data.Position();
            if (datumCase_ == DatumOneofCase.PositionDatum) {
              subBuilder.MergeFrom(PositionDatum);
            }
            input.ReadMessage(subBuilder);
            PositionDatum = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Curve represents a time series of a specified property. This curve belongs
  /// to a specific entity.
  /// </summary>
  public sealed partial class Curve : pb::IMessage<Curve>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Curve> _parser = new pb::MessageParser<Curve>(() => new Curve());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Curve> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DF.Game.API.Data.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Curve() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Curve(Curve other) : this() {
      entityId_ = other.entityId_;
      property_ = other.property_;
      type_ = other.type_;
      data_ = other.data_.Clone();
      tick_ = other.tick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Curve Clone() {
      return new Curve(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private string entityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 2;
    private global::DF.Game.API.Constants.EntityProperty property_ = global::DF.Game.API.Constants.EntityProperty.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DF.Game.API.Constants.EntityProperty Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::DF.Game.API.Constants.CurveType type_ = global::DF.Game.API.Constants.CurveType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DF.Game.API.Constants.CurveType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DF.Game.API.Data.CurveDatum> _repeated_data_codec
        = pb::FieldCodec.ForMessage(34, global::DF.Game.API.Data.CurveDatum.Parser);
    private readonly pbc::RepeatedField<global::DF.Game.API.Data.CurveDatum> data_ = new pbc::RepeatedField<global::DF.Game.API.Data.CurveDatum>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DF.Game.API.Data.CurveDatum> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 5;
    private double tick_;
    /// <summary>
    /// tick is the last server tick at which the curve has been updated. This is
    /// used as a measure of staleness of the curve, and is used when we merge
    /// curves of the same entity property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Tick {
      get { return tick_; }
      set {
        tick_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Curve);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Curve other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (Property != other.Property) return false;
      if (Type != other.Type) return false;
      if(!data_.Equals(other.data_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Tick, other.Tick)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (Property != global::DF.Game.API.Constants.EntityProperty.Unknown) hash ^= Property.GetHashCode();
      if (Type != global::DF.Game.API.Constants.CurveType.Unknown) hash ^= Type.GetHashCode();
      hash ^= data_.GetHashCode();
      if (Tick != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Tick);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EntityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityId);
      }
      if (Property != global::DF.Game.API.Constants.EntityProperty.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Property);
      }
      if (Type != global::DF.Game.API.Constants.CurveType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (Tick != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Tick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EntityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityId);
      }
      if (Property != global::DF.Game.API.Constants.EntityProperty.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Property);
      }
      if (Type != global::DF.Game.API.Constants.CurveType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (Tick != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Tick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (Property != global::DF.Game.API.Constants.EntityProperty.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Property);
      }
      if (Type != global::DF.Game.API.Constants.CurveType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (Tick != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Curve other) {
      if (other == null) {
        return;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.Property != global::DF.Game.API.Constants.EntityProperty.Unknown) {
        Property = other.Property;
      }
      if (other.Type != global::DF.Game.API.Constants.CurveType.Unknown) {
        Type = other.Type;
      }
      data_.Add(other.data_);
      if (other.Tick != 0D) {
        Tick = other.Tick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntityId = input.ReadString();
            break;
          }
          case 16: {
            Property = (global::DF.Game.API.Constants.EntityProperty) input.ReadEnum();
            break;
          }
          case 24: {
            Type = (global::DF.Game.API.Constants.CurveType) input.ReadEnum();
            break;
          }
          case 34: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 41: {
            Tick = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EntityId = input.ReadString();
            break;
          }
          case 16: {
            Property = (global::DF.Game.API.Constants.EntityProperty) input.ReadEnum();
            break;
          }
          case 24: {
            Type = (global::DF.Game.API.Constants.CurveType) input.ReadEnum();
            break;
          }
          case 34: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
          case 41: {
            Tick = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ServerStatus represents the current status of the game server.
  /// </summary>
  public sealed partial class ServerStatus : pb::IMessage<ServerStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerStatus> _parser = new pb::MessageParser<ServerStatus>(() => new ServerStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DF.Game.API.Data.DataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStatus(ServerStatus other) : this() {
      isStarted_ = other.isStarted_;
      tick_ = other.tick_;
      tickDuration_ = other.tickDuration_ != null ? other.tickDuration_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerStatus Clone() {
      return new ServerStatus(this);
    }

    /// <summary>Field number for the "is_started" field.</summary>
    public const int IsStartedFieldNumber = 1;
    private bool isStarted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsStarted {
      get { return isStarted_; }
      set {
        isStarted_ = value;
      }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 2;
    private double tick_;
    /// <summary>
    /// tick represents the current server tick that is being processed. This is a
    /// non-zero integer (cast into a float). This, together with the start_time
    /// and tick_duration, allows the client to predict the current server tick.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Tick {
      get { return tick_; }
      set {
        tick_ = value;
      }
    }

    /// <summary>Field number for the "tick_duration" field.</summary>
    public const int TickDurationFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration tickDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration TickDuration {
      get { return tickDuration_; }
      set {
        tickDuration_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsStarted != other.IsStarted) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Tick, other.Tick)) return false;
      if (!object.Equals(TickDuration, other.TickDuration)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsStarted != false) hash ^= IsStarted.GetHashCode();
      if (Tick != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Tick);
      if (tickDuration_ != null) hash ^= TickDuration.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsStarted != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsStarted);
      }
      if (Tick != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Tick);
      }
      if (tickDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TickDuration);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsStarted != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsStarted);
      }
      if (Tick != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Tick);
      }
      if (tickDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TickDuration);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsStarted != false) {
        size += 1 + 1;
      }
      if (Tick != 0D) {
        size += 1 + 8;
      }
      if (tickDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TickDuration);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerStatus other) {
      if (other == null) {
        return;
      }
      if (other.IsStarted != false) {
        IsStarted = other.IsStarted;
      }
      if (other.Tick != 0D) {
        Tick = other.Tick;
      }
      if (other.tickDuration_ != null) {
        if (tickDuration_ == null) {
          TickDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TickDuration.MergeFrom(other.TickDuration);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsStarted = input.ReadBool();
            break;
          }
          case 17: {
            Tick = input.ReadDouble();
            break;
          }
          case 26: {
            if (tickDuration_ == null) {
              TickDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TickDuration);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsStarted = input.ReadBool();
            break;
          }
          case 17: {
            Tick = input.ReadDouble();
            break;
          }
          case 26: {
            if (tickDuration_ == null) {
              TickDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TickDuration);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Entity represents a game object. This may be a unit (TANK), a rendered
  /// (PROJECTILE_ROCKET), a non-rendered object (PLAYER), or any other trackable
  /// data struct. This object's propeties are represented as parametric curves.
  /// The entire list of entities, along with the property curves, represent
  /// wholly the game state.
  /// </summary>
  public sealed partial class Entity : pb::IMessage<Entity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Entity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DF.Game.API.Data.DataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity(Entity other) : this() {
      entityId_ = other.entityId_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity Clone() {
      return new Entity(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private string entityId_ = "";
    /// <summary>
    /// TODO(minkezhang): Rename to id instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::DF.Game.API.Constants.EntityType type_ = global::DF.Game.API.Constants.EntityType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DF.Game.API.Constants.EntityType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Entity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Entity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (Type != global::DF.Game.API.Constants.EntityType.Unknown) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EntityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityId);
      }
      if (Type != global::DF.Game.API.Constants.EntityType.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EntityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityId);
      }
      if (Type != global::DF.Game.API.Constants.EntityType.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (Type != global::DF.Game.API.Constants.EntityType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Entity other) {
      if (other == null) {
        return;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.Type != global::DF.Game.API.Constants.EntityType.Unknown) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntityId = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::DF.Game.API.Constants.EntityType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EntityId = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::DF.Game.API.Constants.EntityType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameState : pb::IMessage<GameState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameState> _parser = new pb::MessageParser<GameState>(() => new GameState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DF.Game.API.Data.DataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState(GameState other) : this() {
      curves_ = other.curves_.Clone();
      entities_ = other.entities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState Clone() {
      return new GameState(this);
    }

    /// <summary>Field number for the "curves" field.</summary>
    public const int CurvesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DF.Game.API.Data.Curve> _repeated_curves_codec
        = pb::FieldCodec.ForMessage(10, global::DF.Game.API.Data.Curve.Parser);
    private readonly pbc::RepeatedField<global::DF.Game.API.Data.Curve> curves_ = new pbc::RepeatedField<global::DF.Game.API.Data.Curve>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DF.Game.API.Data.Curve> Curves {
      get { return curves_; }
    }

    /// <summary>Field number for the "entities" field.</summary>
    public const int EntitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DF.Game.API.Data.Entity> _repeated_entities_codec
        = pb::FieldCodec.ForMessage(18, global::DF.Game.API.Data.Entity.Parser);
    private readonly pbc::RepeatedField<global::DF.Game.API.Data.Entity> entities_ = new pbc::RepeatedField<global::DF.Game.API.Data.Entity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DF.Game.API.Data.Entity> Entities {
      get { return entities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!curves_.Equals(other.curves_)) return false;
      if(!entities_.Equals(other.entities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= curves_.GetHashCode();
      hash ^= entities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      curves_.WriteTo(output, _repeated_curves_codec);
      entities_.WriteTo(output, _repeated_entities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      curves_.WriteTo(ref output, _repeated_curves_codec);
      entities_.WriteTo(ref output, _repeated_entities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += curves_.CalculateSize(_repeated_curves_codec);
      size += entities_.CalculateSize(_repeated_entities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameState other) {
      if (other == null) {
        return;
      }
      curves_.Add(other.curves_);
      entities_.Add(other.entities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            curves_.AddEntriesFrom(input, _repeated_curves_codec);
            break;
          }
          case 18: {
            entities_.AddEntriesFrom(input, _repeated_entities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            curves_.AddEntriesFrom(ref input, _repeated_curves_codec);
            break;
          }
          case 18: {
            entities_.AddEntriesFrom(ref input, _repeated_entities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
