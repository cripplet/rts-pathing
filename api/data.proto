// Package data.proto
// Game-level structs.

syntax = "proto3";

package game.api.data;
option go_package = "game.api.data";
option csharp_namespace = "DF.Game.API.Data";

import "api/constants.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

// ClientID contains identification information about a specific client
// connected to the game. This struct is surfaced as public information and does
// not contain any authentication-related tokens.
message ClientID {
  string client_id = 1;
}

// Position is a specific point in the map, representing a point in the map.
message Position {
  double x = 1;
  double y = 2;
}

// Coordinate is a pointer to a specific Tile object in a map.
// TODO(minkezhang): Move to //map/api.
message Coordinate {
  int32 x = 1;
  int32 y = 2;
}

// CurveDatum represents a single (time, data) point on a curve. The value of
// the datum may be of multiple types, and it is up to the client and server
// to consume this data responsibly.
message CurveDatum {
  double tick = 1;
  oneof datum {
    bool bool_datum = 2;
    int32 int32_datum = 3;
    double double_datum = 4;
    Position position_datum = 5;
  }
}

// Curve represents a time series of a specified property. This curve belongs
// to a specific entity.
message Curve {
  string entity_id = 1;
  game.api.constants.EntityProperty property = 2;
  game.api.constants.CurveType type = 3;
  repeated CurveDatum data = 4;

  // tick is the last server tick at which the curve has been updated. This is
  // used as a measure of staleness of the curve, and is used when we merge
  // curves of the same entity property.
  double tick = 5;
}

// ServerStatus represents the current status of the game server.
message ServerStatus {
  bool is_started = 1;

  // tick represents the current server tick that is being processed. This is a
  // non-zero integer (cast into a float). This, together with the start_time
  // and tick_duration, allows the client to predict the current server tick.
  double tick = 2;

  google.protobuf.Duration tick_duration = 3;
  google.protobuf.Timestamp start_time = 4;
}

// Entity represents a game object. This may be a unit (TANK), a rendered
// (PROJECTILE_ROCKET), a non-rendered object (PLAYER), or any other trackable
// data struct. This object's propeties are represented as parametric curves.
// The entire list of entities, along with the property curves, represent
// wholly the game state.
message Entity {
  // TODO(minkezhang): Rename to id instead.
  string entity_id = 1;

  game.api.constants.EntityType type = 2;
}

message GameState {
  repeated game.api.data.Curve curves = 1;
  repeated game.api.data.Entity entities = 2;
}
