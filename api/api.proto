syntax = "proto3";

package game.api.api;
option go_package = "game.api.api";

import "api/constants.proto";
import "api/data.proto";

service DownFlux {
  rpc AddClient(AddClientRequest) returns (AddClientResponse) {}

  rpc Move(MoveRequest) returns (MoveResponse) {
    option idempotency_level = IDEMPOTENT;
  };

  rpc StreamCurves(StreamCurvesRequest) returns (stream StreamCurvesResponse) {
    option idempotency_level = IDEMPOTENT;
  }
}

message MoveRequest {
  string client_id = 1;
  string tick_id = 2;
  repeated string entity_ids = 3;
  game.api.data.Position destination = 4;
  game.api.constants.MoveType move_type = 5;
}

message MoveResponse {}

message StreamCurvesRequest {
  string client_id = 1;
  string tick_id = 2;
}

message StreamCurvesResponse {
  string tick_id = 1;
  string next_tick_id = 2;
  repeated game.api.data.Curve curves = 3;
}

// TODO(minkezhang): Add team.
message AddClientRequest {}
message AddClientResponse {
  string client_id = 1;
}
